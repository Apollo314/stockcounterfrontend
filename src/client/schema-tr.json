{
  "openapi": "3.0.3",
  "info": {
    "title": "drf",
    "version": "0.0.0"
  },
  "paths": {
    "/api/schema/": {
      "get": {
        "operationId": "api_schema_retrieve",
        "description": "OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n- YAML: application/vnd.oai.openapi\n- JSON: application/vnd.oai.openapi+json",
        "parameters": [
          {
            "in": "query",
            "name": "format",
            "schema": {
              "type": "string",
              "enum": ["json", "yaml"]
            }
          },
          {
            "in": "query",
            "name": "lang",
            "schema": {
              "type": "string",
              "enum": [
                "af",
                "ar",
                "ar-dz",
                "ast",
                "az",
                "be",
                "bg",
                "bn",
                "br",
                "bs",
                "ca",
                "cs",
                "cy",
                "da",
                "de",
                "dsb",
                "el",
                "en",
                "en-au",
                "en-gb",
                "eo",
                "es",
                "es-ar",
                "es-co",
                "es-mx",
                "es-ni",
                "es-ve",
                "et",
                "eu",
                "fa",
                "fi",
                "fr",
                "fy",
                "ga",
                "gd",
                "gl",
                "he",
                "hi",
                "hr",
                "hsb",
                "hu",
                "hy",
                "ia",
                "id",
                "ig",
                "io",
                "is",
                "it",
                "ja",
                "ka",
                "kab",
                "kk",
                "km",
                "kn",
                "ko",
                "ky",
                "lb",
                "lt",
                "lv",
                "mk",
                "ml",
                "mn",
                "mr",
                "ms",
                "my",
                "nb",
                "ne",
                "nl",
                "nn",
                "os",
                "pa",
                "pl",
                "pt",
                "pt-br",
                "ro",
                "ru",
                "sk",
                "sl",
                "sq",
                "sr",
                "sr-latn",
                "sv",
                "sw",
                "ta",
                "te",
                "tg",
                "th",
                "tk",
                "tr",
                "tt",
                "udm",
                "uk",
                "ur",
                "uz",
                "vi",
                "zh-hans",
                "zh-hant"
              ]
            }
          }
        ],
        "tags": ["api"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.oai.openapi": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "application/vnd.oai.openapi+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/inventory/bulk/category/": {
      "delete": {
        "operationId": "inventory_bulk_category_destroy",
        "parameters": [
          {
            "in": "query",
            "name": "pk",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": true
          }
        ],
        "tags": ["inventory"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/inventory/bulk/item/": {
      "patch": {
        "operationId": "inventory_bulk_item_partial_update",
        "parameters": [
          {
            "in": "query",
            "name": "pk",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": true
          }
        ],
        "tags": ["inventory"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PatchedItemInRequest"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemIn"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "inventory_bulk_item_destroy",
        "parameters": [
          {
            "in": "query",
            "name": "pk",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": true
          }
        ],
        "tags": ["inventory"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/inventory/bulk/stock-unit/": {
      "delete": {
        "operationId": "inventory_bulk_stock_unit_destroy",
        "parameters": [
          {
            "in": "query",
            "name": "pk",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": true
          }
        ],
        "tags": ["inventory"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/inventory/bulk/warehouse/": {
      "delete": {
        "operationId": "inventory_bulk_warehouse_destroy",
        "parameters": [
          {
            "in": "query",
            "name": "pk",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": true
          }
        ],
        "tags": ["inventory"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/inventory/category/": {
      "get": {
        "operationId": "inventory_category_list",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Ara: Kategori",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string",
              "enum": ["id", "name", "-id", "-name"]
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["inventory"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedCategoryList"
                }
              }
            },
            "description": ""
          }
        },
        "x-filters": {
          "SearchFilter": [
            {
              "name": "search",
              "required": false,
              "in": "query",
              "description": "Ara: Kategori",
              "schema": {
                "type": "string"
              }
            }
          ],
          "OrderingFilter": [
            {
              "name": "ordering",
              "required": false,
              "in": "query",
              "description": "Which field to use when ordering the results.",
              "schema": {
                "type": "string",
                "enum": ["id", "name", "-id", "-name"]
              }
            }
          ]
        }
      },
      "post": {
        "operationId": "inventory_category_create",
        "tags": ["inventory"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/inventory/category/{name}/": {
      "get": {
        "operationId": "inventory_category_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string",
              "title": "Kategori"
            },
            "required": true
          }
        ],
        "tags": ["inventory"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "inventory_category_update",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string",
              "title": "Kategori"
            },
            "required": true
          }
        ],
        "tags": ["inventory"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "inventory_category_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string",
              "title": "Kategori"
            },
            "required": true
          }
        ],
        "tags": ["inventory"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedCategoryRequest"
              }
            }
          }
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "inventory_category_destroy",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string",
              "title": "Kategori"
            },
            "required": true
          }
        ],
        "tags": ["inventory"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/inventory/item/": {
      "get": {
        "operationId": "inventory_item_list",
        "parameters": [
          {
            "name": "category__in",
            "required": false,
            "in": "query",
            "description": "category__in",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "multi-category-selector",
                "props": {
                  "label": "Kategori"
                }
              }
            }
          },
          {
            "name": "category__isnull",
            "required": false,
            "in": "query",
            "description": "category__isnull",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "checkbox",
                "props": {
                  "label": "Kategorisizleri göster",
                  "toggleIndeterminate": true
                }
              }
            }
          },
          {
            "name": "buyprice__range",
            "required": false,
            "in": "query",
            "description": "buyprice__range",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "money-range",
                "props": {
                  "label": "Alış fiyatı"
                }
              }
            }
          },
          {
            "name": "sellprice__range",
            "required": false,
            "in": "query",
            "description": "sellprice__range",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "money-range",
                "props": {
                  "label": "Satış fiyatı"
                }
              }
            }
          },
          {
            "name": "barcode",
            "required": false,
            "in": "query",
            "description": "barcode",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "barcode-scanner",
                "props": {
                  "label": "Barkod"
                }
              }
            }
          },
          {
            "name": "stock_unit__in",
            "required": false,
            "in": "query",
            "description": "stock_unit__in",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "multi-stockunit-selector",
                "props": {
                  "label": "Birim"
                }
              }
            }
          },
          {
            "name": "created_at__range",
            "required": false,
            "in": "query",
            "description": "created_at__range",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "date-time-range",
                "props": {
                  "label": "Oluşturulma tarihi"
                }
              }
            }
          },
          {
            "name": "updated_at__range",
            "required": false,
            "in": "query",
            "description": "updated_at__range",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "date-time-range",
                "props": {
                  "label": "Güncelleme tarihi"
                }
              }
            }
          },
          {
            "name": "created_by",
            "required": false,
            "in": "query",
            "description": "created_by",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "user-select",
                "props": {
                  "label": "Oluşturan"
                }
              }
            }
          },
          {
            "name": "updated_by",
            "required": false,
            "in": "query",
            "description": "updated_by",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "user-select",
                "props": {
                  "label": "Güncelleyen"
                }
              }
            }
          },
          {
            "name": "inactivated",
            "required": false,
            "in": "query",
            "description": "inactivated",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "checkbox",
                "props": {
                  "label": "İnaktif Ürün/Hizmetleri göster",
                  "toggleIndeterminate": true
                }
              }
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "name",
                "created_at",
                "buyprice",
                "sellprice",
                "updated_at",
                "category",
                "-id",
                "-name",
                "-created_at",
                "-buyprice",
                "-sellprice",
                "-updated_at",
                "-category"
              ]
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Ara: Ürün/Hizmet, Açıklama",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["inventory"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedItemOutList"
                }
              }
            },
            "description": ""
          }
        },
        "x-filters": {
          "DjangoFilterBackend": [
            {
              "name": "category__in",
              "required": false,
              "in": "query",
              "description": "category__in",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "multi-category-selector",
                  "props": {
                    "label": "Kategori"
                  }
                }
              }
            },
            {
              "name": "category__isnull",
              "required": false,
              "in": "query",
              "description": "category__isnull",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "checkbox",
                  "props": {
                    "label": "Kategorisizleri göster",
                    "toggleIndeterminate": true
                  }
                }
              }
            },
            {
              "name": "buyprice__range",
              "required": false,
              "in": "query",
              "description": "buyprice__range",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "money-range",
                  "props": {
                    "label": "Alış fiyatı"
                  }
                }
              }
            },
            {
              "name": "sellprice__range",
              "required": false,
              "in": "query",
              "description": "sellprice__range",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "money-range",
                  "props": {
                    "label": "Satış fiyatı"
                  }
                }
              }
            },
            {
              "name": "barcode",
              "required": false,
              "in": "query",
              "description": "barcode",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "barcode-scanner",
                  "props": {
                    "label": "Barkod"
                  }
                }
              }
            },
            {
              "name": "stock_unit__in",
              "required": false,
              "in": "query",
              "description": "stock_unit__in",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "multi-stockunit-selector",
                  "props": {
                    "label": "Birim"
                  }
                }
              }
            },
            {
              "name": "created_at__range",
              "required": false,
              "in": "query",
              "description": "created_at__range",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "date-time-range",
                  "props": {
                    "label": "Oluşturulma tarihi"
                  }
                }
              }
            },
            {
              "name": "updated_at__range",
              "required": false,
              "in": "query",
              "description": "updated_at__range",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "date-time-range",
                  "props": {
                    "label": "Güncelleme tarihi"
                  }
                }
              }
            },
            {
              "name": "created_by",
              "required": false,
              "in": "query",
              "description": "created_by",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "user-select",
                  "props": {
                    "label": "Oluşturan"
                  }
                }
              }
            },
            {
              "name": "updated_by",
              "required": false,
              "in": "query",
              "description": "updated_by",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "user-select",
                  "props": {
                    "label": "Güncelleyen"
                  }
                }
              }
            },
            {
              "name": "inactivated",
              "required": false,
              "in": "query",
              "description": "inactivated",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "checkbox",
                  "props": {
                    "label": "İnaktif Ürün/Hizmetleri göster",
                    "toggleIndeterminate": true
                  }
                }
              }
            }
          ],
          "OrderingFilter": [
            {
              "name": "ordering",
              "required": false,
              "in": "query",
              "description": "Which field to use when ordering the results.",
              "schema": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "created_at",
                  "buyprice",
                  "sellprice",
                  "updated_at",
                  "category",
                  "-id",
                  "-name",
                  "-created_at",
                  "-buyprice",
                  "-sellprice",
                  "-updated_at",
                  "-category"
                ]
              }
            }
          ],
          "SearchFilter": [
            {
              "name": "search",
              "required": false,
              "in": "query",
              "description": "Ara: Ürün/Hizmet, Açıklama",
              "schema": {
                "type": "string"
              }
            }
          ]
        }
      },
      "post": {
        "operationId": "inventory_item_create",
        "tags": ["inventory"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemInRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemIn"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/inventory/item-history/": {
      "get": {
        "operationId": "inventory_item_history_list",
        "parameters": [
          {
            "name": "category__in",
            "required": false,
            "in": "query",
            "description": "category__in",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "multi-category-selector",
                "props": {
                  "label": "Kategori"
                }
              }
            }
          },
          {
            "name": "category__isnull",
            "required": false,
            "in": "query",
            "description": "category__isnull",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "checkbox",
                "props": {
                  "label": "Kategorisizleri göster",
                  "toggleIndeterminate": true
                }
              }
            }
          },
          {
            "name": "buyprice__range",
            "required": false,
            "in": "query",
            "description": "buyprice__range",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "money-range",
                "props": {
                  "label": "Alış fiyatı"
                }
              }
            }
          },
          {
            "name": "sellprice__range",
            "required": false,
            "in": "query",
            "description": "sellprice__range",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "money-range",
                "props": {
                  "label": "Satış fiyatı"
                }
              }
            }
          },
          {
            "name": "barcode",
            "required": false,
            "in": "query",
            "description": "barcode",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "barcode-scanner",
                "props": {
                  "label": "Barkod"
                }
              }
            }
          },
          {
            "name": "stock_unit__in",
            "required": false,
            "in": "query",
            "description": "stock_unit__in",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "multi-stockunit-selector",
                "props": {
                  "label": "Birim"
                }
              }
            }
          },
          {
            "name": "created_at__range",
            "required": false,
            "in": "query",
            "description": "created_at__range",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "date-time-range",
                "props": {
                  "label": "Oluşturulma tarihi"
                }
              }
            }
          },
          {
            "name": "updated_at__range",
            "required": false,
            "in": "query",
            "description": "updated_at__range",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "date-time-range",
                "props": {
                  "label": "Güncelleme tarihi"
                }
              }
            }
          },
          {
            "name": "created_by",
            "required": false,
            "in": "query",
            "description": "created_by",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "user-select",
                "props": {
                  "label": "Oluşturan"
                }
              }
            }
          },
          {
            "name": "updated_by",
            "required": false,
            "in": "query",
            "description": "updated_by",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "user-select",
                "props": {
                  "label": "Güncelleyen"
                }
              }
            }
          },
          {
            "name": "inactivated",
            "required": false,
            "in": "query",
            "description": "inactivated",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "checkbox",
                "props": {
                  "label": "İnaktif Ürün/Hizmetleri göster",
                  "toggleIndeterminate": true
                }
              }
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "name",
                "created_at",
                "updated_at",
                "buyprice",
                "sellprice",
                "category",
                "-id",
                "-name",
                "-created_at",
                "-updated_at",
                "-buyprice",
                "-sellprice",
                "-category"
              ]
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Ara: Ürün/Hizmet, Açıklama",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["inventory"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedItemOutList"
                }
              }
            },
            "description": ""
          }
        },
        "x-filters": {
          "DjangoFilterBackend": [
            {
              "name": "category__in",
              "required": false,
              "in": "query",
              "description": "category__in",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "multi-category-selector",
                  "props": {
                    "label": "Kategori"
                  }
                }
              }
            },
            {
              "name": "category__isnull",
              "required": false,
              "in": "query",
              "description": "category__isnull",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "checkbox",
                  "props": {
                    "label": "Kategorisizleri göster",
                    "toggleIndeterminate": true
                  }
                }
              }
            },
            {
              "name": "buyprice__range",
              "required": false,
              "in": "query",
              "description": "buyprice__range",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "money-range",
                  "props": {
                    "label": "Alış fiyatı"
                  }
                }
              }
            },
            {
              "name": "sellprice__range",
              "required": false,
              "in": "query",
              "description": "sellprice__range",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "money-range",
                  "props": {
                    "label": "Satış fiyatı"
                  }
                }
              }
            },
            {
              "name": "barcode",
              "required": false,
              "in": "query",
              "description": "barcode",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "barcode-scanner",
                  "props": {
                    "label": "Barkod"
                  }
                }
              }
            },
            {
              "name": "stock_unit__in",
              "required": false,
              "in": "query",
              "description": "stock_unit__in",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "multi-stockunit-selector",
                  "props": {
                    "label": "Birim"
                  }
                }
              }
            },
            {
              "name": "created_at__range",
              "required": false,
              "in": "query",
              "description": "created_at__range",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "date-time-range",
                  "props": {
                    "label": "Oluşturulma tarihi"
                  }
                }
              }
            },
            {
              "name": "updated_at__range",
              "required": false,
              "in": "query",
              "description": "updated_at__range",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "date-time-range",
                  "props": {
                    "label": "Güncelleme tarihi"
                  }
                }
              }
            },
            {
              "name": "created_by",
              "required": false,
              "in": "query",
              "description": "created_by",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "user-select",
                  "props": {
                    "label": "Oluşturan"
                  }
                }
              }
            },
            {
              "name": "updated_by",
              "required": false,
              "in": "query",
              "description": "updated_by",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "user-select",
                  "props": {
                    "label": "Güncelleyen"
                  }
                }
              }
            },
            {
              "name": "inactivated",
              "required": false,
              "in": "query",
              "description": "inactivated",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "checkbox",
                  "props": {
                    "label": "İnaktif Ürün/Hizmetleri göster",
                    "toggleIndeterminate": true
                  }
                }
              }
            }
          ],
          "OrderingFilter": [
            {
              "name": "ordering",
              "required": false,
              "in": "query",
              "description": "Which field to use when ordering the results.",
              "schema": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "created_at",
                  "updated_at",
                  "buyprice",
                  "sellprice",
                  "category",
                  "-id",
                  "-name",
                  "-created_at",
                  "-updated_at",
                  "-buyprice",
                  "-sellprice",
                  "-category"
                ]
              }
            }
          ],
          "SearchFilter": [
            {
              "name": "search",
              "required": false,
              "in": "query",
              "description": "Ara: Ürün/Hizmet, Açıklama",
              "schema": {
                "type": "string"
              }
            }
          ]
        }
      },
      "post": {
        "operationId": "inventory_item_history_create",
        "tags": ["inventory"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemInRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemIn"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/inventory/item-history/{history_id}/": {
      "get": {
        "operationId": "inventory_item_history_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "history_id",
            "schema": {
              "type": "integer",
              "title": null
            },
            "description": "A unique integer value identifying this historical item.",
            "required": true
          }
        ],
        "tags": ["inventory"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemDetail"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "inventory_item_history_update",
        "parameters": [
          {
            "in": "path",
            "name": "history_id",
            "schema": {
              "type": "integer",
              "title": null
            },
            "description": "A unique integer value identifying this historical item.",
            "required": true
          }
        ],
        "tags": ["inventory"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemInRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemIn"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "inventory_item_history_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "history_id",
            "schema": {
              "type": "integer",
              "title": null
            },
            "description": "A unique integer value identifying this historical item.",
            "required": true
          }
        ],
        "tags": ["inventory"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedItemInRequest"
              }
            }
          }
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemIn"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "inventory_item_history_destroy",
        "parameters": [
          {
            "in": "path",
            "name": "history_id",
            "schema": {
              "type": "integer",
              "title": null
            },
            "description": "A unique integer value identifying this historical item.",
            "required": true
          }
        ],
        "tags": ["inventory"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/inventory/item/{id}/": {
      "get": {
        "operationId": "inventory_item_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this item.",
            "required": true
          }
        ],
        "tags": ["inventory"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemDetail"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "inventory_item_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this item.",
            "required": true
          }
        ],
        "tags": ["inventory"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemInRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemIn"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "inventory_item_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this item.",
            "required": true
          }
        ],
        "tags": ["inventory"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedItemInRequest"
              }
            }
          }
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemIn"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "inventory_item_destroy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this item.",
            "required": true
          }
        ],
        "tags": ["inventory"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/inventory/stock-movement/": {
      "get": {
        "operationId": "inventory_stock_movement_list",
        "parameters": [
          {
            "name": "created_at__range",
            "required": false,
            "in": "query",
            "description": "created_at__range",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "date-time-range",
                "props": {
                  "label": "Oluşturma tarihi"
                }
              }
            }
          },
          {
            "name": "updated_at__range",
            "required": false,
            "in": "query",
            "description": "updated_at__range",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "date-time-range",
                "props": {
                  "label": "Güncellenme tarihi"
                }
              }
            }
          },
          {
            "name": "created_by",
            "required": false,
            "in": "query",
            "description": "created_by",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "user-select",
                "props": {
                  "label": "Oluşturan kullanıcı"
                }
              }
            }
          },
          {
            "name": "updated_by",
            "required": false,
            "in": "query",
            "description": "updated_by",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "user-select",
                "props": {
                  "label": "Güncelleyen kullanıcı"
                }
              }
            }
          },
          {
            "name": "warehouse_item_stock__item__id",
            "required": false,
            "in": "query",
            "description": "warehouse_item_stock__item__id",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "item-select",
                "props": {
                  "label": "item"
                }
              }
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "created_at",
                "updated_at",
                "created_by",
                "updated_by",
                "-id",
                "-created_at",
                "-updated_at",
                "-created_by",
                "-updated_by"
              ]
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Ara: Ürün/Hizmet",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["inventory"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedStockMovementWithoutItemList"
                }
              }
            },
            "description": ""
          }
        },
        "x-filters": {
          "DjangoFilterBackend": [
            {
              "name": "created_at__range",
              "required": false,
              "in": "query",
              "description": "created_at__range",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "date-time-range",
                  "props": {
                    "label": "Oluşturma tarihi"
                  }
                }
              }
            },
            {
              "name": "updated_at__range",
              "required": false,
              "in": "query",
              "description": "updated_at__range",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "date-time-range",
                  "props": {
                    "label": "Güncellenme tarihi"
                  }
                }
              }
            },
            {
              "name": "created_by",
              "required": false,
              "in": "query",
              "description": "created_by",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "user-select",
                  "props": {
                    "label": "Oluşturan kullanıcı"
                  }
                }
              }
            },
            {
              "name": "updated_by",
              "required": false,
              "in": "query",
              "description": "updated_by",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "user-select",
                  "props": {
                    "label": "Güncelleyen kullanıcı"
                  }
                }
              }
            },
            {
              "name": "warehouse_item_stock__item__id",
              "required": false,
              "in": "query",
              "description": "warehouse_item_stock__item__id",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "item-select",
                  "props": {
                    "label": "item"
                  }
                }
              }
            }
          ],
          "OrderingFilter": [
            {
              "name": "ordering",
              "required": false,
              "in": "query",
              "description": "Which field to use when ordering the results.",
              "schema": {
                "type": "string",
                "enum": [
                  "id",
                  "created_at",
                  "updated_at",
                  "created_by",
                  "updated_by",
                  "-id",
                  "-created_at",
                  "-updated_at",
                  "-created_by",
                  "-updated_by"
                ]
              }
            }
          ],
          "SearchFilter": [
            {
              "name": "search",
              "required": false,
              "in": "query",
              "description": "Ara: Ürün/Hizmet",
              "schema": {
                "type": "string"
              }
            }
          ]
        }
      },
      "post": {
        "operationId": "inventory_stock_movement_create",
        "tags": ["inventory"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockMovementWithoutItemRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockMovementWithoutItem"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/inventory/stock-movement/{id}/": {
      "get": {
        "operationId": "inventory_stock_movement_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this stock movement.",
            "required": true
          }
        ],
        "tags": ["inventory"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockMovementWithoutItem"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "inventory_stock_movement_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this stock movement.",
            "required": true
          }
        ],
        "tags": ["inventory"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockMovementWithoutItemRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockMovementWithoutItem"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "inventory_stock_movement_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this stock movement.",
            "required": true
          }
        ],
        "tags": ["inventory"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedStockMovementWithoutItemRequest"
              }
            }
          }
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockMovementWithoutItem"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "inventory_stock_movement_destroy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this stock movement.",
            "required": true
          }
        ],
        "tags": ["inventory"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/inventory/stock_unit/": {
      "get": {
        "operationId": "inventory_stock_unit_list",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Ara: Birim",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string",
              "enum": ["id", "name", "-id", "-name"]
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["inventory"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedStockUnitList"
                }
              }
            },
            "description": ""
          }
        },
        "x-filters": {
          "SearchFilter": [
            {
              "name": "search",
              "required": false,
              "in": "query",
              "description": "Ara: Birim",
              "schema": {
                "type": "string"
              }
            }
          ],
          "OrderingFilter": [
            {
              "name": "ordering",
              "required": false,
              "in": "query",
              "description": "Which field to use when ordering the results.",
              "schema": {
                "type": "string",
                "enum": ["id", "name", "-id", "-name"]
              }
            }
          ]
        }
      },
      "post": {
        "operationId": "inventory_stock_unit_create",
        "tags": ["inventory"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockUnitRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockUnit"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/inventory/stock_unit/{name}/": {
      "get": {
        "operationId": "inventory_stock_unit_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string",
              "title": "Birim"
            },
            "required": true
          }
        ],
        "tags": ["inventory"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockUnit"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "inventory_stock_unit_update",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string",
              "title": "Birim"
            },
            "required": true
          }
        ],
        "tags": ["inventory"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockUnitRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockUnit"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "inventory_stock_unit_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string",
              "title": "Birim"
            },
            "required": true
          }
        ],
        "tags": ["inventory"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedStockUnitRequest"
              }
            }
          }
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockUnit"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "inventory_stock_unit_destroy",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string",
              "title": "Birim"
            },
            "required": true
          }
        ],
        "tags": ["inventory"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/inventory/warehouse/": {
      "get": {
        "operationId": "inventory_warehouse_list",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Ara: Depo adı, Adres, Telefon, Plaka numarası",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["inventory"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedWarehouseList"
                }
              }
            },
            "description": ""
          }
        },
        "x-filters": {
          "SearchFilter": [
            {
              "name": "search",
              "required": false,
              "in": "query",
              "description": "Ara: Depo adı, Adres, Telefon, Plaka numarası",
              "schema": {
                "type": "string"
              }
            }
          ]
        }
      },
      "post": {
        "operationId": "inventory_warehouse_create",
        "tags": ["inventory"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WarehouseRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/inventory/warehouse-item-stock/": {
      "get": {
        "operationId": "inventory_warehouse_item_stock_list",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Ara: Ürün/Hizmet",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["inventory"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedWarehouseItemStockInfoList"
                }
              }
            },
            "description": ""
          }
        },
        "x-filters": {
          "SearchFilter": [
            {
              "name": "search",
              "required": false,
              "in": "query",
              "description": "Ara: Ürün/Hizmet",
              "schema": {
                "type": "string"
              }
            }
          ],
          "DjangoFilterBackend": []
        }
      }
    },
    "/inventory/warehouse-item-stock/{id}/": {
      "get": {
        "operationId": "inventory_warehouse_item_stock_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this warehouse item stock.",
            "required": true
          }
        ],
        "tags": ["inventory"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WarehouseItemStockInfo"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/inventory/warehouse/{id}/": {
      "get": {
        "operationId": "inventory_warehouse_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this warehouse.",
            "required": true
          }
        ],
        "tags": ["inventory"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "inventory_warehouse_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this warehouse.",
            "required": true
          }
        ],
        "tags": ["inventory"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WarehouseRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "inventory_warehouse_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this warehouse.",
            "required": true
          }
        ],
        "tags": ["inventory"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedWarehouseRequest"
              }
            }
          }
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Warehouse"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "inventory_warehouse_destroy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this warehouse.",
            "required": true
          }
        ],
        "tags": ["inventory"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/invoice/bulk/invoice/": {
      "delete": {
        "operationId": "invoice_bulk_invoice_destroy",
        "parameters": [
          {
            "in": "query",
            "name": "pk",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": true
          }
        ],
        "tags": ["invoice"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/invoice/invoice/": {
      "get": {
        "operationId": "invoice_invoice_list",
        "parameters": [
          {
            "name": "created_at__range",
            "required": false,
            "in": "query",
            "description": "created_at__range",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "date-time-range",
                "props": {
                  "label": "Oluşturma tarihi"
                }
              }
            }
          },
          {
            "name": "updated_at__range",
            "required": false,
            "in": "query",
            "description": "updated_at__range",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "date-time-range",
                "props": {
                  "label": "Güncellenme tarihi"
                }
              }
            }
          },
          {
            "name": "created_by",
            "required": false,
            "in": "query",
            "description": "created_by",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "user-select",
                "props": {
                  "label": "Oluşturan kullanıcı"
                }
              }
            }
          },
          {
            "name": "updated_by",
            "required": false,
            "in": "query",
            "description": "updated_by",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "user-select",
                "props": {
                  "label": "Güncelleyen kullanıcı"
                }
              }
            }
          },
          {
            "name": "invoice_type",
            "required": false,
            "in": "query",
            "description": "invoice_type",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "hidden"
              },
              "enum": ["purchase", "sale", "refund-purchase", "refund-sale"]
            }
          },
          {
            "name": "items__stock_movement__warehouse_item_stock__item__id",
            "required": false,
            "in": "query",
            "description": "items__stock_movement__warehouse_item_stock__item__id",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "item-select",
                "props": {
                  "label": "item"
                }
              }
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "name",
                "created_at",
                "updated_at",
                "created_by",
                "updated_by",
                "total_with_tax",
                "-id",
                "-name",
                "-created_at",
                "-updated_at",
                "-created_by",
                "-updated_by",
                "-total_with_tax"
              ]
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Ara: Fatura Adı",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["invoice"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedInvoiceListList"
                }
              }
            },
            "description": ""
          }
        },
        "x-filters": {
          "DjangoFilterBackend": [
            {
              "name": "created_at__range",
              "required": false,
              "in": "query",
              "description": "created_at__range",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "date-time-range",
                  "props": {
                    "label": "Oluşturma tarihi"
                  }
                }
              }
            },
            {
              "name": "updated_at__range",
              "required": false,
              "in": "query",
              "description": "updated_at__range",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "date-time-range",
                  "props": {
                    "label": "Güncellenme tarihi"
                  }
                }
              }
            },
            {
              "name": "created_by",
              "required": false,
              "in": "query",
              "description": "created_by",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "user-select",
                  "props": {
                    "label": "Oluşturan kullanıcı"
                  }
                }
              }
            },
            {
              "name": "updated_by",
              "required": false,
              "in": "query",
              "description": "updated_by",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "user-select",
                  "props": {
                    "label": "Güncelleyen kullanıcı"
                  }
                }
              }
            },
            {
              "name": "invoice_type",
              "required": false,
              "in": "query",
              "description": "invoice_type",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "hidden"
                },
                "enum": ["purchase", "sale", "refund-purchase", "refund-sale"]
              }
            },
            {
              "name": "items__stock_movement__warehouse_item_stock__item__id",
              "required": false,
              "in": "query",
              "description": "items__stock_movement__warehouse_item_stock__item__id",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "item-select",
                  "props": {
                    "label": "item"
                  }
                }
              }
            }
          ],
          "OrderingFilter": [
            {
              "name": "ordering",
              "required": false,
              "in": "query",
              "description": "Which field to use when ordering the results.",
              "schema": {
                "type": "string",
                "enum": [
                  "id",
                  "name",
                  "created_at",
                  "updated_at",
                  "created_by",
                  "updated_by",
                  "total_with_tax",
                  "-id",
                  "-name",
                  "-created_at",
                  "-updated_at",
                  "-created_by",
                  "-updated_by",
                  "-total_with_tax"
                ]
              }
            }
          ],
          "SearchFilter": [
            {
              "name": "search",
              "required": false,
              "in": "query",
              "description": "Ara: Fatura Adı",
              "schema": {
                "type": "string"
              }
            }
          ]
        }
      },
      "post": {
        "operationId": "invoice_invoice_create",
        "tags": ["invoice"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceDetailInRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDetailIn"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/invoice/invoice/{id}/": {
      "get": {
        "operationId": "invoice_invoice_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this invoice.",
            "required": true
          }
        ],
        "tags": ["invoice"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDetailOut"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "invoice_invoice_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this invoice.",
            "required": true
          }
        ],
        "tags": ["invoice"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceDetailInRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceDetailIn"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "invoice_invoice_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this invoice.",
            "required": true
          }
        ],
        "tags": ["invoice"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedInvoiceListRequest"
              }
            }
          }
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceList"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "invoice_invoice_destroy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this invoice.",
            "required": true
          }
        ],
        "tags": ["invoice"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/stakeholder/bulk/stakeholder/": {
      "delete": {
        "operationId": "stakeholder_bulk_stakeholder_destroy",
        "parameters": [
          {
            "in": "query",
            "name": "pk",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": true
          }
        ],
        "tags": ["stakeholder"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/stakeholder/customers/": {
      "get": {
        "operationId": "stakeholder_customers_list",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Ara: Tam Adı, Telefon, E-Posta, VKN/TCKN",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shortname__icontains",
            "required": false,
            "in": "query",
            "description": "shortname__icontains",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "text-input",
                "props": {
                  "label": "Kısa Adı"
                }
              }
            }
          },
          {
            "name": "vkntckn__icontains",
            "required": false,
            "in": "query",
            "description": "vkntckn__icontains",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "text-input",
                "props": {
                  "label": "VKN/TCKN"
                }
              }
            }
          },
          {
            "name": "email__icontains",
            "required": false,
            "in": "query",
            "description": "email__icontains",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "text-input",
                "props": {
                  "label": "E-Posta"
                }
              }
            }
          },
          {
            "name": "phone__icontains",
            "required": false,
            "in": "query",
            "description": "phone__icontains",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "text-input",
                "props": {
                  "label": "Telefon"
                }
              }
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["stakeholder"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedStakeholderList"
                }
              }
            },
            "description": ""
          }
        },
        "x-filters": {
          "SearchFilter": [
            {
              "name": "search",
              "required": false,
              "in": "query",
              "description": "Ara: Tam Adı, Telefon, E-Posta, VKN/TCKN",
              "schema": {
                "type": "string"
              }
            }
          ],
          "DjangoFilterBackend": [
            {
              "name": "shortname__icontains",
              "required": false,
              "in": "query",
              "description": "shortname__icontains",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "text-input",
                  "props": {
                    "label": "Kısa Adı"
                  }
                }
              }
            },
            {
              "name": "vkntckn__icontains",
              "required": false,
              "in": "query",
              "description": "vkntckn__icontains",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "text-input",
                  "props": {
                    "label": "VKN/TCKN"
                  }
                }
              }
            },
            {
              "name": "email__icontains",
              "required": false,
              "in": "query",
              "description": "email__icontains",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "text-input",
                  "props": {
                    "label": "E-Posta"
                  }
                }
              }
            },
            {
              "name": "phone__icontains",
              "required": false,
              "in": "query",
              "description": "phone__icontains",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "text-input",
                  "props": {
                    "label": "Telefon"
                  }
                }
              }
            }
          ]
        }
      },
      "post": {
        "operationId": "stakeholder_customers_create",
        "tags": ["stakeholder"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StakeholderRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stakeholder"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/stakeholder/customers/{id}/": {
      "get": {
        "operationId": "stakeholder_customers_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this stakeholder.",
            "required": true
          }
        ],
        "tags": ["stakeholder"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stakeholder"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "stakeholder_customers_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this stakeholder.",
            "required": true
          }
        ],
        "tags": ["stakeholder"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StakeholderRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stakeholder"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "stakeholder_customers_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this stakeholder.",
            "required": true
          }
        ],
        "tags": ["stakeholder"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedStakeholderRequest"
              }
            }
          }
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stakeholder"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "stakeholder_customers_destroy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this stakeholder.",
            "required": true
          }
        ],
        "tags": ["stakeholder"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/stakeholder/stakeholder-employee/": {
      "get": {
        "operationId": "stakeholder_stakeholder_employee_list",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["stakeholder"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedStakeholderEmployeeList"
                }
              }
            },
            "description": ""
          }
        },
        "x-filters": {
          "SearchFilter": [
            {
              "name": "search",
              "required": false,
              "in": "query",
              "description": "A search term.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "DjangoFilterBackend": []
        }
      },
      "post": {
        "operationId": "stakeholder_stakeholder_employee_create",
        "tags": ["stakeholder"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StakeholderEmployeeRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StakeholderEmployee"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/stakeholder/stakeholder-employee/{id}/": {
      "get": {
        "operationId": "stakeholder_stakeholder_employee_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this stakeholder employee.",
            "required": true
          }
        ],
        "tags": ["stakeholder"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StakeholderEmployee"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "stakeholder_stakeholder_employee_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this stakeholder employee.",
            "required": true
          }
        ],
        "tags": ["stakeholder"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StakeholderEmployeeRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StakeholderEmployee"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "stakeholder_stakeholder_employee_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this stakeholder employee.",
            "required": true
          }
        ],
        "tags": ["stakeholder"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedStakeholderEmployeeRequest"
              }
            }
          }
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StakeholderEmployee"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "stakeholder_stakeholder_employee_destroy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this stakeholder employee.",
            "required": true
          }
        ],
        "tags": ["stakeholder"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/stakeholder/suppliers/": {
      "get": {
        "operationId": "stakeholder_suppliers_list",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Ara: Tam Adı, Telefon, E-Posta, VKN/TCKN",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "shortname__icontains",
            "required": false,
            "in": "query",
            "description": "shortname__icontains",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "text-input",
                "props": {
                  "label": "Kısa Adı"
                }
              }
            }
          },
          {
            "name": "vkntckn__icontains",
            "required": false,
            "in": "query",
            "description": "vkntckn__icontains",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "text-input",
                "props": {
                  "label": "VKN/TCKN"
                }
              }
            }
          },
          {
            "name": "email__icontains",
            "required": false,
            "in": "query",
            "description": "email__icontains",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "text-input",
                "props": {
                  "label": "E-Posta"
                }
              }
            }
          },
          {
            "name": "phone__icontains",
            "required": false,
            "in": "query",
            "description": "phone__icontains",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "text-input",
                "props": {
                  "label": "Telefon"
                }
              }
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["stakeholder"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedStakeholderList"
                }
              }
            },
            "description": ""
          }
        },
        "x-filters": {
          "SearchFilter": [
            {
              "name": "search",
              "required": false,
              "in": "query",
              "description": "Ara: Tam Adı, Telefon, E-Posta, VKN/TCKN",
              "schema": {
                "type": "string"
              }
            }
          ],
          "DjangoFilterBackend": [
            {
              "name": "shortname__icontains",
              "required": false,
              "in": "query",
              "description": "shortname__icontains",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "text-input",
                  "props": {
                    "label": "Kısa Adı"
                  }
                }
              }
            },
            {
              "name": "vkntckn__icontains",
              "required": false,
              "in": "query",
              "description": "vkntckn__icontains",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "text-input",
                  "props": {
                    "label": "VKN/TCKN"
                  }
                }
              }
            },
            {
              "name": "email__icontains",
              "required": false,
              "in": "query",
              "description": "email__icontains",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "text-input",
                  "props": {
                    "label": "E-Posta"
                  }
                }
              }
            },
            {
              "name": "phone__icontains",
              "required": false,
              "in": "query",
              "description": "phone__icontains",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "text-input",
                  "props": {
                    "label": "Telefon"
                  }
                }
              }
            }
          ]
        }
      },
      "post": {
        "operationId": "stakeholder_suppliers_create",
        "tags": ["stakeholder"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StakeholderRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stakeholder"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/stakeholder/suppliers/{id}/": {
      "get": {
        "operationId": "stakeholder_suppliers_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this stakeholder.",
            "required": true
          }
        ],
        "tags": ["stakeholder"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stakeholder"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "stakeholder_suppliers_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this stakeholder.",
            "required": true
          }
        ],
        "tags": ["stakeholder"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StakeholderRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stakeholder"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "stakeholder_suppliers_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this stakeholder.",
            "required": true
          }
        ],
        "tags": ["stakeholder"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedStakeholderRequest"
              }
            }
          }
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Stakeholder"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "stakeholder_suppliers_destroy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this stakeholder.",
            "required": true
          }
        ],
        "tags": ["stakeholder"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/user/accounts/": {
      "get": {
        "operationId": "user_accounts_list",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Ara: adı, soyadı, e-posta adresi, kullanıcı adı",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username__icontains",
            "required": false,
            "in": "query",
            "description": "username__icontains",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "text-input",
                "props": {
                  "label": "Kullanıcı Adı",
                  "placeholder": "Kullanıcı Adı"
                }
              }
            }
          },
          {
            "name": "first_name__icontains",
            "required": false,
            "in": "query",
            "description": "first_name__icontains",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "text-input",
                "props": {
                  "label": "Soy İsim",
                  "placeholder": "Soy İsim"
                }
              }
            }
          },
          {
            "name": "groups__in",
            "required": false,
            "in": "query",
            "description": "groups__in",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "user-group-selector",
                "props": {
                  "label": "Kullanıcı Grubu"
                }
              }
            }
          },
          {
            "name": "is_staff",
            "required": false,
            "in": "query",
            "description": "is_staff",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "checkbox",
                "props": {
                  "label": "Yetkili Çalışan"
                }
              }
            }
          },
          {
            "name": "is_superuser",
            "required": false,
            "in": "query",
            "description": "is_superuser",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "checkbox",
                "props": {
                  "label": "Admin"
                }
              }
            }
          },
          {
            "name": "is_active",
            "required": false,
            "in": "query",
            "description": "is_active",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "checkbox",
                "props": {
                  "label": "Etkin"
                }
              }
            }
          },
          {
            "name": "date_joined__range",
            "required": false,
            "in": "query",
            "description": "date_joined__range",
            "schema": {
              "type": "string",
              "x-components": {
                "component": "date-time-range",
                "props": {
                  "label": "Kayıt Tarihi"
                }
              }
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["user"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedUserList"
                }
              }
            },
            "description": ""
          }
        },
        "x-filters": {
          "SearchFilter": [
            {
              "name": "search",
              "required": false,
              "in": "query",
              "description": "Ara: adı, soyadı, e-posta adresi, kullanıcı adı",
              "schema": {
                "type": "string"
              }
            }
          ],
          "DjangoFilterBackend": [
            {
              "name": "username__icontains",
              "required": false,
              "in": "query",
              "description": "username__icontains",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "text-input",
                  "props": {
                    "label": "Kullanıcı Adı",
                    "placeholder": "Kullanıcı Adı"
                  }
                }
              }
            },
            {
              "name": "first_name__icontains",
              "required": false,
              "in": "query",
              "description": "first_name__icontains",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "text-input",
                  "props": {
                    "label": "Soy İsim",
                    "placeholder": "Soy İsim"
                  }
                }
              }
            },
            {
              "name": "groups__in",
              "required": false,
              "in": "query",
              "description": "groups__in",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "user-group-selector",
                  "props": {
                    "label": "Kullanıcı Grubu"
                  }
                }
              }
            },
            {
              "name": "is_staff",
              "required": false,
              "in": "query",
              "description": "is_staff",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "checkbox",
                  "props": {
                    "label": "Yetkili Çalışan"
                  }
                }
              }
            },
            {
              "name": "is_superuser",
              "required": false,
              "in": "query",
              "description": "is_superuser",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "checkbox",
                  "props": {
                    "label": "Admin"
                  }
                }
              }
            },
            {
              "name": "is_active",
              "required": false,
              "in": "query",
              "description": "is_active",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "checkbox",
                  "props": {
                    "label": "Etkin"
                  }
                }
              }
            },
            {
              "name": "date_joined__range",
              "required": false,
              "in": "query",
              "description": "date_joined__range",
              "schema": {
                "type": "string",
                "x-components": {
                  "component": "date-time-range",
                  "props": {
                    "label": "Kayıt Tarihi"
                  }
                }
              }
            }
          ]
        }
      },
      "post": {
        "operationId": "user_accounts_create",
        "tags": ["user"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/user/accounts/{id}/": {
      "get": {
        "operationId": "user_accounts_retrieve",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this kullanıcı.",
            "required": true
          }
        ],
        "tags": ["user"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "user_accounts_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this kullanıcı.",
            "required": true
          }
        ],
        "tags": ["user"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "user_accounts_partial_update",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this kullanıcı.",
            "required": true
          }
        ],
        "tags": ["user"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedUserRequest"
              }
            }
          }
        },
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "user_accounts_destroy",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer",
              "title": "ID"
            },
            "description": "A unique integer value identifying this kullanıcı.",
            "required": true
          }
        ],
        "tags": ["user"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/user/groups/": {
      "get": {
        "operationId": "user_groups_list",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": ["user"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedGroupList"
                }
              }
            },
            "description": ""
          }
        },
        "x-filters": {}
      }
    },
    "/user/login/": {
      "post": {
        "operationId": "user_login_create",
        "tags": ["user"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "security": [{}],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Login"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/user/logout/": {
      "post": {
        "operationId": "user_logout_create",
        "tags": ["user"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          }
        },
        "security": [
          {
            "knoxTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/user/logoutall/": {
      "post": {
        "operationId": "user_logoutall_create",
        "description": "Log the user out of all sessions\nI.E. deletes all auth tokens for the user",
        "tags": ["user"],
        "security": [
          {
            "knoxTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "No response body"
          }
        }
      }
    },
    "/user/me/": {
      "get": {
        "operationId": "user_me_retrieve",
        "tags": ["user"],
        "security": [
          {
            "knoxTokenAuth": []
          },
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithGroupDetail"
                }
              }
            },
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "name": {
            "type": "string",
            "title": "Kategori",
            "maxLength": 40
          },
          "parent": {
            "type": "integer",
            "title": "Üst Kategori",
            "nullable": true,
            "x-components": {
              "component": "category-selector"
            }
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleCategory"
            },
            "readOnly": true,
            "title": "Children"
          }
        },
        "required": ["children", "id", "name"]
      },
      "CategoryRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Kategori",
            "maxLength": 40
          },
          "parent": {
            "type": "integer",
            "title": "Üst Kategori",
            "nullable": true,
            "x-components": {
              "component": "category-selector"
            }
          }
        },
        "required": ["name"]
      },
      "ConciseUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "username": {
            "type": "string",
            "title": "Kullanıcı adı",
            "description": "Zorunlu. 150 karakter ya da daha az olmalı. Sadece harfler, rakamlar ve @/./+/-/_ karakterleri kullanılabilir.",
            "pattern": "^[\\w.@+-]+$",
            "maxLength": 150
          },
          "first_name": {
            "type": "string",
            "title": "Adı",
            "maxLength": 150
          },
          "last_name": {
            "type": "string",
            "title": "Soyadı",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "E-posta adresi",
            "maxLength": 254
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "title": "Telefon",
            "maxLength": 15
          },
          "date_joined": {
            "type": "string",
            "format": "date-time",
            "title": "Katılma tarihi"
          },
          "last_login": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "title": "Son oturum açma"
          },
          "is_active": {
            "type": "boolean",
            "default": true,
            "title": "Etkin",
            "description": "Bu kullanıcının etkin olarak işlem görüp görmediğini belirler. Hesapları silmek yerine bunun işaretini kaldırın."
          },
          "is_staff": {
            "type": "boolean",
            "default": false,
            "title": "Görev durumu",
            "description": "Kullanıcının bu yönetici sitesine oturum açıp açamayacağını belirler."
          },
          "is_superuser": {
            "type": "boolean",
            "default": false,
            "title": "Süper kullanıcı durumu",
            "description": "Bu kullanıcıya ayrı ayrı izin atamadan tüm izinlerin verilip verilmeyeceğini belirler."
          },
          "avatar": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "title": "Kullanıcı Resmi"
          }
        },
        "required": ["id", "username"]
      },
      "ConciseUserRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 1,
            "title": "Kullanıcı adı",
            "description": "Zorunlu. 150 karakter ya da daha az olmalı. Sadece harfler, rakamlar ve @/./+/-/_ karakterleri kullanılabilir.",
            "pattern": "^[\\w.@+-]+$",
            "maxLength": 150
          },
          "first_name": {
            "type": "string",
            "title": "Adı",
            "maxLength": 150
          },
          "last_name": {
            "type": "string",
            "title": "Soyadı",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "E-posta adresi",
            "maxLength": 254
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "title": "Telefon",
            "maxLength": 15
          },
          "date_joined": {
            "type": "string",
            "format": "date-time",
            "title": "Katılma tarihi"
          },
          "last_login": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "title": "Son oturum açma"
          },
          "is_active": {
            "type": "boolean",
            "default": true,
            "title": "Etkin",
            "description": "Bu kullanıcının etkin olarak işlem görüp görmediğini belirler. Hesapları silmek yerine bunun işaretini kaldırın."
          },
          "is_staff": {
            "type": "boolean",
            "default": false,
            "title": "Görev durumu",
            "description": "Kullanıcının bu yönetici sitesine oturum açıp açamayacağını belirler."
          },
          "is_superuser": {
            "type": "boolean",
            "default": false,
            "title": "Süper kullanıcı durumu",
            "description": "Bu kullanıcıya ayrı ayrı izin atamadan tüm izinlerin verilip verilmeyeceğini belirler."
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "nullable": true,
            "title": "Kullanıcı Resmi"
          }
        },
        "required": ["username"]
      },
      "CurrencyEnum": {
        "enum": ["TRY", "USD", "EUR", "GBP"],
        "type": "string"
      },
      "Group": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "name": {
            "type": "string",
            "title": "Adı",
            "maxLength": 150
          }
        },
        "required": ["id", "name"]
      },
      "GroupDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "name": {
            "type": "string",
            "title": "Adı",
            "maxLength": 150
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "integer",
              "title": "Izinler"
            },
            "title": "Izinler"
          }
        },
        "required": ["id", "name"]
      },
      "GroupRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Adı",
            "maxLength": 150
          }
        },
        "required": ["name"]
      },
      "InvoiceDetailIn": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "invoice_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceTypeEnum"
              }
            ],
            "title": "Fatura Tipi"
          },
          "name": {
            "type": "string",
            "title": "Fatura Adı",
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "nullable": true,
            "title": "Açıklama"
          },
          "invoice_conditions": {
            "type": "string",
            "nullable": true,
            "title": "Fatura Koşulları"
          },
          "last_payment_date": {
            "type": "string",
            "format": "date-time",
            "title": "Son Ödeme Tarihi"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "default": "TRY",
            "title": "Fatura Para Birimi"
          },
          "currency_exchange_rate": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Döviz Kuru"
          },
          "stakeholder": {
            "type": "integer",
            "title": "Alakalı Taraf"
          },
          "warehouse": {
            "type": "integer",
            "title": "Alakalı Depo"
          },
          "total": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Toplam Kdv Hariç Tutar"
          },
          "total_with_tax": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Toplam Kdv Dahil Tutar"
          },
          "related_invoice": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceList"
            },
            "title": "Related invoice"
          }
        },
        "required": ["id", "invoice_type", "name", "stakeholder", "warehouse"]
      },
      "InvoiceDetailInRequest": {
        "type": "object",
        "properties": {
          "invoice_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceTypeEnum"
              }
            ],
            "title": "Fatura Tipi"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Fatura Adı",
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "nullable": true,
            "title": "Açıklama"
          },
          "invoice_conditions": {
            "type": "string",
            "nullable": true,
            "title": "Fatura Koşulları"
          },
          "last_payment_date": {
            "type": "string",
            "format": "date-time",
            "title": "Son Ödeme Tarihi"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "default": "TRY",
            "title": "Fatura Para Birimi"
          },
          "currency_exchange_rate": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Döviz Kuru"
          },
          "stakeholder": {
            "type": "integer",
            "title": "Alakalı Taraf"
          },
          "warehouse": {
            "type": "integer",
            "title": "Alakalı Depo"
          },
          "total": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Toplam Kdv Hariç Tutar"
          },
          "total_with_tax": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Toplam Kdv Dahil Tutar"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceItemRequest"
            },
            "writeOnly": true,
            "title": "Items"
          },
          "related_invoice": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceListRequest"
            },
            "title": "Related invoice"
          }
        },
        "required": [
          "invoice_type",
          "items",
          "name",
          "stakeholder",
          "warehouse"
        ]
      },
      "InvoiceDetailOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "invoice_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceTypeEnum"
              }
            ],
            "title": "Fatura Tipi"
          },
          "name": {
            "type": "string",
            "title": "Fatura Adı",
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "nullable": true,
            "title": "Açıklama"
          },
          "invoice_conditions": {
            "type": "string",
            "nullable": true,
            "title": "Fatura Koşulları"
          },
          "last_payment_date": {
            "type": "string",
            "format": "date-time",
            "title": "Son Ödeme Tarihi"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "default": "TRY",
            "title": "Fatura Para Birimi"
          },
          "currency_exchange_rate": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Döviz Kuru"
          },
          "stakeholder": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Stakeholder"
              }
            ],
            "title": "Stakeholder"
          },
          "warehouse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Warehouse"
              }
            ],
            "title": "Warehouse"
          },
          "total": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Toplam Kdv Hariç Tutar"
          },
          "total_with_tax": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Toplam Kdv Dahil Tutar"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceItem"
            },
            "title": "Items"
          },
          "related_invoice": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceList"
            },
            "title": "Related invoice"
          }
        },
        "required": [
          "id",
          "invoice_type",
          "items",
          "name",
          "stakeholder",
          "warehouse"
        ]
      },
      "InvoiceDetailOutForInvoiceItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "invoice_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceTypeEnum"
              }
            ],
            "title": "Fatura Tipi"
          },
          "name": {
            "type": "string",
            "title": "Fatura Adı",
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "nullable": true,
            "title": "Açıklama"
          },
          "last_payment_date": {
            "type": "string",
            "format": "date-time",
            "title": "Son Ödeme Tarihi"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "default": "TRY",
            "title": "Fatura Para Birimi"
          },
          "currency_exchange_rate": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Döviz Kuru"
          },
          "stakeholder": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StakeholderBasic"
              }
            ],
            "title": "Stakeholder"
          },
          "created_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConciseUser"
              }
            ],
            "title": "Created by"
          },
          "total": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Toplam Kdv Hariç Tutar"
          },
          "total_with_tax": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Toplam Kdv Dahil Tutar"
          }
        },
        "required": ["created_by", "id", "invoice_type", "name", "stakeholder"]
      },
      "InvoiceDetailOutForInvoiceItemRequest": {
        "type": "object",
        "properties": {
          "invoice_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceTypeEnum"
              }
            ],
            "title": "Fatura Tipi"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Fatura Adı",
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "nullable": true,
            "title": "Açıklama"
          },
          "last_payment_date": {
            "type": "string",
            "format": "date-time",
            "title": "Son Ödeme Tarihi"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "default": "TRY",
            "title": "Fatura Para Birimi"
          },
          "currency_exchange_rate": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Döviz Kuru"
          },
          "stakeholder": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StakeholderBasicRequest"
              }
            ],
            "title": "Stakeholder"
          },
          "created_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConciseUserRequest"
              }
            ],
            "title": "Created by"
          },
          "total": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Toplam Kdv Hariç Tutar"
          },
          "total_with_tax": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Toplam Kdv Dahil Tutar"
          }
        },
        "required": ["created_by", "invoice_type", "name", "stakeholder"]
      },
      "InvoiceItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "stock_movement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StockMovementNested"
              }
            ],
            "title": "Stock movement"
          },
          "price": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "title": "Fiyat"
          }
        },
        "required": ["price", "stock_movement"]
      },
      "InvoiceItemRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "invoice": {
            "type": "integer",
            "writeOnly": true,
            "title": "Invoice"
          },
          "stock_movement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StockMovementNestedRequest"
              }
            ],
            "title": "Stock movement"
          },
          "price": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "title": "Fiyat"
          }
        },
        "required": ["price", "stock_movement"]
      },
      "InvoiceItemWithDetailedInvoice": {
        "type": "object",
        "properties": {
          "invoice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceDetailOutForInvoiceItem"
              }
            ],
            "title": "Invoice"
          },
          "price": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "title": "Fiyat"
          }
        },
        "required": ["invoice", "price"]
      },
      "InvoiceItemWithDetailedInvoiceRequest": {
        "type": "object",
        "properties": {
          "invoice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceDetailOutForInvoiceItemRequest"
              }
            ],
            "title": "Invoice"
          },
          "price": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "title": "Fiyat"
          }
        },
        "required": ["invoice", "price"]
      },
      "InvoiceList": {
        "type": "object",
        "description": "For listview only",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "name": {
            "type": "string",
            "title": "Fatura Adı",
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "nullable": true,
            "title": "Açıklama"
          },
          "last_payment_date": {
            "type": "string",
            "format": "date-time",
            "title": "Son Ödeme Tarihi"
          },
          "created_by": {
            "type": "integer",
            "title": "Oluşturan",
            "nullable": true
          },
          "updated_by": {
            "type": "integer",
            "title": "Güncelleyen",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Oluşturulma tarihi"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "title": "Güncelleme tarihi"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "default": "TRY",
            "title": "Fatura Para Birimi"
          },
          "currency_exchange_rate": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Döviz Kuru"
          },
          "total": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Toplam Kdv Hariç Tutar"
          },
          "total_with_tax": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Toplam Kdv Dahil Tutar"
          },
          "stakeholder": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StakeholderBasic"
              }
            ],
            "title": "Stakeholder"
          },
          "warehouse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Warehouse"
              }
            ],
            "title": "Warehouse"
          }
        },
        "required": ["id", "name", "stakeholder", "updated_at", "warehouse"]
      },
      "InvoiceListRequest": {
        "type": "object",
        "description": "For listview only",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Fatura Adı",
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "nullable": true,
            "title": "Açıklama"
          },
          "last_payment_date": {
            "type": "string",
            "format": "date-time",
            "title": "Son Ödeme Tarihi"
          },
          "created_by": {
            "type": "integer",
            "title": "Oluşturan",
            "nullable": true
          },
          "updated_by": {
            "type": "integer",
            "title": "Güncelleyen",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Oluşturulma tarihi"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "default": "TRY",
            "title": "Fatura Para Birimi"
          },
          "currency_exchange_rate": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Döviz Kuru"
          },
          "total": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Toplam Kdv Hariç Tutar"
          },
          "total_with_tax": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Toplam Kdv Dahil Tutar"
          },
          "stakeholder": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StakeholderBasicRequest"
              }
            ],
            "title": "Stakeholder"
          },
          "warehouse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseRequest"
              }
            ],
            "title": "Warehouse"
          }
        },
        "required": ["name", "stakeholder", "warehouse"]
      },
      "InvoiceTypeEnum": {
        "enum": ["purchase", "sale", "refund-purchase", "refund-sale"],
        "type": "string"
      },
      "ItemDetail": {
        "type": "object",
        "description": "For individual actions, create, update, delete...",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "name": {
            "type": "string",
            "title": "Ürün/Hizmet",
            "maxLength": 200
          },
          "thumbnail": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "title": "Önizleme resmi",
            "x-components": {
              "component": "single-image-selector"
            }
          },
          "stock_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StockUnit"
              }
            ],
            "title": "Stock unit",
            "x-components": {
              "component": "unit-selector"
            }
          },
          "buyprice": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "title": "Alış fiyatı",
            "x-components": {
              "component": "money-input"
            }
          },
          "buycurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "default": "TRY",
            "title": "Alış para birimi"
          },
          "sellprice": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "title": "Satış fiyatı",
            "x-components": {
              "component": "money-input"
            }
          },
          "sellcurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "default": "TRY",
            "title": "Satış para birimi"
          },
          "kdv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KdvEnum"
              }
            ],
            "title": "Katma Değer Vergisi",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "stock_code": {
            "type": "string",
            "nullable": true,
            "title": "Birim kodu",
            "maxLength": 40
          },
          "stocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarehouseItemStock"
            },
            "readOnly": true,
            "title": "Stocks"
          },
          "barcode": {
            "type": "string",
            "nullable": true,
            "title": "Barkod",
            "maxLength": 20,
            "x-components": {
              "component": "barcode-scanner"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "title": "Oluşturulma tarihi"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "title": "Güncelleme tarihi"
          },
          "created_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConciseUser"
              }
            ],
            "title": "Created by"
          },
          "updated_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConciseUser"
              }
            ],
            "title": "Updated by"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "title": "Açıklama",
            "maxLength": 2000
          },
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Category"
              }
            ],
            "title": "Category",
            "x-components": {
              "component": "category-selector"
            }
          },
          "previous_id": {
            "type": "integer",
            "nullable": true,
            "readOnly": true,
            "title": "Previous id"
          },
          "next_id": {
            "type": "integer",
            "nullable": true,
            "readOnly": true,
            "title": "Next id"
          }
        },
        "required": [
          "buyprice",
          "created_at",
          "created_by",
          "id",
          "kdv",
          "name",
          "next_id",
          "previous_id",
          "sellprice",
          "stock_unit",
          "stocks",
          "updated_at",
          "updated_by"
        ]
      },
      "ItemIn": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "name": {
            "type": "string",
            "title": "Ürün/Hizmet",
            "maxLength": 200
          },
          "thumbnail": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "title": "Önizleme resmi",
            "x-components": {
              "component": "single-image-selector"
            }
          },
          "stock_unit": {
            "type": "integer",
            "title": "Birim",
            "x-components": {
              "component": "unit-selector"
            }
          },
          "buyprice": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "title": "Alış fiyatı",
            "x-components": {
              "component": "money-input"
            }
          },
          "buycurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "default": "TRY",
            "title": "Alış para birimi"
          },
          "sellprice": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "title": "Satış fiyatı",
            "x-components": {
              "component": "money-input"
            }
          },
          "sellcurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "default": "TRY",
            "title": "Satış para birimi"
          },
          "kdv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KdvEnum"
              }
            ],
            "title": "Katma Değer Vergisi",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "stock_code": {
            "type": "string",
            "nullable": true,
            "title": "Birim kodu",
            "maxLength": 40
          },
          "stocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarehouseItemStock"
            },
            "readOnly": true,
            "title": "Stocks"
          },
          "barcode": {
            "type": "string",
            "nullable": true,
            "title": "Barkod",
            "maxLength": 20,
            "x-components": {
              "component": "barcode-scanner"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "title": "Oluşturulma tarihi"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "title": "Güncelleme tarihi"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "title": "Açıklama",
            "maxLength": 2000
          },
          "category": {
            "type": "integer",
            "title": "Kategori",
            "nullable": true,
            "x-components": {
              "component": "category-selector"
            }
          }
        },
        "required": [
          "buyprice",
          "created_at",
          "id",
          "kdv",
          "name",
          "sellprice",
          "stock_unit",
          "stocks",
          "updated_at"
        ]
      },
      "ItemInRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Ürün/Hizmet",
            "maxLength": 200
          },
          "thumbnail": {
            "type": "string",
            "format": "binary",
            "nullable": true,
            "title": "Önizleme resmi",
            "x-components": {
              "component": "single-image-selector"
            }
          },
          "stock_unit": {
            "type": "integer",
            "title": "Birim",
            "x-components": {
              "component": "unit-selector"
            }
          },
          "buyprice": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "title": "Alış fiyatı",
            "x-components": {
              "component": "money-input"
            }
          },
          "buycurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "default": "TRY",
            "title": "Alış para birimi"
          },
          "sellprice": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "title": "Satış fiyatı",
            "x-components": {
              "component": "money-input"
            }
          },
          "sellcurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "default": "TRY",
            "title": "Satış para birimi"
          },
          "kdv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KdvEnum"
              }
            ],
            "title": "Katma Değer Vergisi",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "stock_code": {
            "type": "string",
            "nullable": true,
            "title": "Birim kodu",
            "maxLength": 40
          },
          "barcode": {
            "type": "string",
            "nullable": true,
            "title": "Barkod",
            "maxLength": 20,
            "x-components": {
              "component": "barcode-scanner"
            }
          },
          "description": {
            "type": "string",
            "nullable": true,
            "title": "Açıklama",
            "maxLength": 2000
          },
          "category": {
            "type": "integer",
            "title": "Kategori",
            "nullable": true,
            "x-components": {
              "component": "category-selector"
            }
          }
        },
        "required": ["buyprice", "kdv", "name", "sellprice", "stock_unit"]
      },
      "ItemNested": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Ürün/Hizmet",
            "maxLength": 200
          },
          "description": {
            "type": "string",
            "nullable": true,
            "title": "Açıklama",
            "maxLength": 2000
          },
          "stock_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StockUnitNested"
              }
            ],
            "title": "Stock unit"
          },
          "barcode": {
            "type": "string",
            "nullable": true,
            "title": "Barkod",
            "maxLength": 20
          },
          "kdv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KdvEnum"
              }
            ],
            "title": "Katma Değer Vergisi",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "stocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarehouseItemStockINFO_ONLY"
            },
            "title": "Stocks"
          },
          "stock_code": {
            "type": "string",
            "nullable": true,
            "title": "Birim kodu",
            "maxLength": 40
          },
          "buyprice": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "title": "Alış fiyatı"
          },
          "buycurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "default": "TRY",
            "title": "Alış para birimi"
          },
          "sellprice": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "title": "Satış fiyatı"
          },
          "sellcurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "default": "TRY",
            "title": "Satış para birimi"
          }
        },
        "required": [
          "buyprice",
          "kdv",
          "name",
          "sellprice",
          "stock_unit",
          "stocks"
        ]
      },
      "ItemNestedRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Ürün/Hizmet",
            "maxLength": 200
          },
          "description": {
            "type": "string",
            "nullable": true,
            "title": "Açıklama",
            "maxLength": 2000
          },
          "stock_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StockUnitNestedRequest"
              }
            ],
            "title": "Stock unit"
          },
          "barcode": {
            "type": "string",
            "nullable": true,
            "title": "Barkod",
            "maxLength": 20
          },
          "kdv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KdvEnum"
              }
            ],
            "title": "Katma Değer Vergisi",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "stocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarehouseItemStockINFO_ONLYRequest"
            },
            "title": "Stocks"
          },
          "stock_code": {
            "type": "string",
            "nullable": true,
            "title": "Birim kodu",
            "maxLength": 40
          },
          "buyprice": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "title": "Alış fiyatı"
          },
          "buycurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "default": "TRY",
            "title": "Alış para birimi"
          },
          "sellprice": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "title": "Satış fiyatı"
          },
          "sellcurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "default": "TRY",
            "title": "Satış para birimi"
          }
        },
        "required": [
          "buyprice",
          "kdv",
          "name",
          "sellprice",
          "stock_unit",
          "stocks"
        ]
      },
      "ItemOut": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "name": {
            "type": "string",
            "title": "Ürün/Hizmet",
            "maxLength": 200
          },
          "thumbnail": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "title": "Önizleme resmi",
            "x-components": {
              "component": "single-image-selector"
            }
          },
          "stock_unit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StockUnit"
              }
            ],
            "title": "Stock unit",
            "x-components": {
              "component": "unit-selector"
            }
          },
          "buyprice": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "title": "Alış fiyatı",
            "x-components": {
              "component": "money-input"
            }
          },
          "buycurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "default": "TRY",
            "title": "Alış para birimi"
          },
          "sellprice": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "title": "Satış fiyatı",
            "x-components": {
              "component": "money-input"
            }
          },
          "sellcurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "default": "TRY",
            "title": "Satış para birimi"
          },
          "kdv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KdvEnum"
              }
            ],
            "title": "Katma Değer Vergisi",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "stock_code": {
            "type": "string",
            "nullable": true,
            "title": "Birim kodu",
            "maxLength": 40
          },
          "stocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarehouseItemStock"
            },
            "readOnly": true,
            "title": "Stocks"
          },
          "barcode": {
            "type": "string",
            "nullable": true,
            "title": "Barkod",
            "maxLength": 20,
            "x-components": {
              "component": "barcode-scanner"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "title": "Oluşturulma tarihi"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true,
            "title": "Güncelleme tarihi"
          },
          "created_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConciseUser"
              }
            ],
            "title": "Created by"
          },
          "updated_by": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConciseUser"
              }
            ],
            "title": "Updated by"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "title": "Açıklama",
            "maxLength": 2000
          },
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Category"
              }
            ],
            "title": "Category",
            "x-components": {
              "component": "category-selector"
            }
          }
        },
        "required": [
          "buyprice",
          "created_at",
          "created_by",
          "id",
          "kdv",
          "name",
          "sellprice",
          "stock_unit",
          "stocks",
          "updated_at",
          "updated_by"
        ]
      },
      "KdvEnum": {
        "enum": [0, 1, 8, 18],
        "type": "integer"
      },
      "Login": {
        "type": "object",
        "properties": {
          "user": {
            "allOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ],
            "readOnly": true,
            "title": "User"
          }
        },
        "required": ["user"]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1,
            "title": "Kullanıcı adı"
          },
          "password": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1,
            "title": "Parola"
          }
        },
        "required": ["password", "username"]
      },
      "LogoutRequest": {
        "type": "object",
        "properties": {
          "digest": {
            "type": "string",
            "writeOnly": true,
            "minLength": 1,
            "title": "Token digest"
          }
        }
      },
      "PaginatedCategoryList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          }
        }
      },
      "PaginatedGroupList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Group"
            }
          }
        }
      },
      "PaginatedInvoiceListList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceList"
            }
          }
        }
      },
      "PaginatedItemOutList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemOut"
            }
          }
        }
      },
      "PaginatedStakeholderEmployeeList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StakeholderEmployee"
            }
          }
        }
      },
      "PaginatedStakeholderList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Stakeholder"
            }
          }
        }
      },
      "PaginatedStockMovementWithoutItemList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockMovementWithoutItem"
            }
          }
        }
      },
      "PaginatedStockUnitList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockUnit"
            }
          }
        }
      },
      "PaginatedUserList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "PaginatedWarehouseItemStockInfoList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WarehouseItemStockInfo"
            }
          }
        }
      },
      "PaginatedWarehouseList": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 123
          },
          "next": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=400&limit=100"
          },
          "previous": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "http://api.example.org/accounts/?offset=200&limit=100"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warehouse"
            }
          }
        }
      },
      "PatchedCategoryRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Kategori",
            "maxLength": 40
          },
          "parent": {
            "type": "integer",
            "title": "Üst Kategori",
            "nullable": true,
            "x-components": {
              "component": "category-selector"
            }
          }
        }
      },
      "PatchedInvoiceListRequest": {
        "type": "object",
        "description": "For listview only",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Fatura Adı",
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "nullable": true,
            "title": "Açıklama"
          },
          "last_payment_date": {
            "type": "string",
            "format": "date-time",
            "title": "Son Ödeme Tarihi"
          },
          "created_by": {
            "type": "integer",
            "title": "Oluşturan",
            "nullable": true
          },
          "updated_by": {
            "type": "integer",
            "title": "Güncelleyen",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Oluşturulma tarihi"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "default": "TRY",
            "title": "Fatura Para Birimi"
          },
          "currency_exchange_rate": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Döviz Kuru"
          },
          "total": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Toplam Kdv Hariç Tutar"
          },
          "total_with_tax": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Toplam Kdv Dahil Tutar"
          },
          "stakeholder": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StakeholderBasicRequest"
              }
            ],
            "title": "Stakeholder"
          },
          "warehouse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseRequest"
              }
            ],
            "title": "Warehouse"
          }
        }
      },
      "PatchedItemInRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Ürün/Hizmet",
            "maxLength": 200
          },
          "thumbnail": {
            "type": "string",
            "format": "binary",
            "nullable": true,
            "title": "Önizleme resmi",
            "x-components": {
              "component": "single-image-selector"
            }
          },
          "stock_unit": {
            "type": "integer",
            "title": "Birim",
            "x-components": {
              "component": "unit-selector"
            }
          },
          "buyprice": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "title": "Alış fiyatı",
            "x-components": {
              "component": "money-input"
            }
          },
          "buycurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "default": "TRY",
            "title": "Alış para birimi"
          },
          "sellprice": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "title": "Satış fiyatı",
            "x-components": {
              "component": "money-input"
            }
          },
          "sellcurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CurrencyEnum"
              }
            ],
            "default": "TRY",
            "title": "Satış para birimi"
          },
          "kdv": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KdvEnum"
              }
            ],
            "title": "Katma Değer Vergisi",
            "minimum": -2147483648,
            "maximum": 2147483647
          },
          "stock_code": {
            "type": "string",
            "nullable": true,
            "title": "Birim kodu",
            "maxLength": 40
          },
          "barcode": {
            "type": "string",
            "nullable": true,
            "title": "Barkod",
            "maxLength": 20,
            "x-components": {
              "component": "barcode-scanner"
            }
          },
          "description": {
            "type": "string",
            "nullable": true,
            "title": "Açıklama",
            "maxLength": 2000
          },
          "category": {
            "type": "integer",
            "title": "Kategori",
            "nullable": true,
            "x-components": {
              "component": "category-selector"
            }
          }
        }
      },
      "PatchedStakeholderEmployeeRequest": {
        "type": "object",
        "properties": {
          "stakeholder": {
            "type": "integer",
            "title": "Temsil ettiği kurum ya da kişi"
          },
          "position": {
            "type": "string",
            "nullable": true,
            "title": "Pozisyonu",
            "maxLength": 100
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Adı",
            "maxLength": 100
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "title": "Telefon",
            "maxLength": 20
          },
          "email": {
            "type": "string",
            "nullable": true,
            "title": "E-Posta",
            "maxLength": 100
          }
        }
      },
      "PatchedStakeholderRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Tam Adı",
            "maxLength": 400
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoleEnum"
              }
            ],
            "title": "Rolü"
          },
          "shortname": {
            "type": "string",
            "minLength": 1,
            "title": "Kısa/Takma Adı",
            "maxLength": 100
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "title": "Telefon",
            "maxLength": 20
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "title": "E-Posta",
            "maxLength": 100
          },
          "vkntckn": {
            "type": "string",
            "nullable": true,
            "title": "VKN/TCKN",
            "maxLength": 40
          },
          "address": {
            "type": "string",
            "nullable": true,
            "title": "Adres",
            "maxLength": 1000
          }
        }
      },
      "PatchedStockMovementWithoutItemRequest": {
        "type": "object",
        "properties": {
          "warehouse_item_stock": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseItemStockInfoRequest"
              }
            ],
            "title": "Warehouse item stock"
          },
          "amount": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "title": "Miktar"
          },
          "invoice_item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceItemWithDetailedInvoiceRequest"
              }
            ],
            "title": "Invoice item"
          }
        }
      },
      "PatchedStockUnitRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Birim",
            "maxLength": 20
          }
        }
      },
      "PatchedUserRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 1,
            "title": "Kullanıcı adı",
            "description": "Zorunlu. 150 karakter ya da daha az olmalı. Sadece harfler, rakamlar ve @/./+/-/_ karakterleri kullanılabilir.",
            "pattern": "^[\\w.@+-]+$",
            "maxLength": 150
          },
          "first_name": {
            "type": "string",
            "title": "Adı",
            "maxLength": 150
          },
          "last_name": {
            "type": "string",
            "title": "Soyadı",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "E-posta adresi",
            "maxLength": 254
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "title": "Telefon",
            "maxLength": 15
          },
          "date_joined": {
            "type": "string",
            "format": "date-time",
            "title": "Katılma tarihi"
          },
          "last_login": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "title": "Son oturum açma"
          },
          "is_active": {
            "type": "boolean",
            "default": true,
            "title": "Etkin",
            "description": "Bu kullanıcının etkin olarak işlem görüp görmediğini belirler. Hesapları silmek yerine bunun işaretini kaldırın."
          },
          "is_staff": {
            "type": "boolean",
            "default": false,
            "title": "Görev durumu",
            "description": "Kullanıcının bu yönetici sitesine oturum açıp açamayacağını belirler."
          },
          "is_superuser": {
            "type": "boolean",
            "default": false,
            "title": "Süper kullanıcı durumu",
            "description": "Bu kullanıcıya ayrı ayrı izin atamadan tüm izinlerin verilip verilmeyeceğini belirler."
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "nullable": true,
            "title": "Kullanıcı Resmi"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupRequest"
            },
            "title": "Groups"
          }
        }
      },
      "PatchedWarehouseRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Depo adı",
            "maxLength": 100
          },
          "address": {
            "type": "string",
            "nullable": true,
            "title": "Adres",
            "maxLength": 200
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "title": "Telefon",
            "maxLength": 20
          },
          "plate_number": {
            "type": "string",
            "nullable": true,
            "title": "Plaka numarası",
            "maxLength": 20
          }
        }
      },
      "RoleEnum": {
        "enum": ["Satıcı", "Müşteri", "Müşteri ve Satıcı"],
        "type": "string"
      },
      "SimpleCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "name": {
            "type": "string",
            "title": "Kategori",
            "maxLength": 40
          }
        },
        "required": ["id", "name"]
      },
      "SimpleCategoryRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Kategori",
            "maxLength": 40
          }
        },
        "required": ["name"]
      },
      "Stakeholder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "name": {
            "type": "string",
            "title": "Tam Adı",
            "maxLength": 400
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoleEnum"
              }
            ],
            "title": "Rolü"
          },
          "shortname": {
            "type": "string",
            "title": "Kısa/Takma Adı",
            "maxLength": 100
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "title": "Telefon",
            "maxLength": 20
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "title": "E-Posta",
            "maxLength": 100
          },
          "vkntckn": {
            "type": "string",
            "nullable": true,
            "title": "VKN/TCKN",
            "maxLength": 40
          },
          "address": {
            "type": "string",
            "nullable": true,
            "title": "Adres",
            "maxLength": 1000
          },
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StakeholderEmployee"
            },
            "readOnly": true,
            "title": "Employees"
          }
        },
        "required": ["employees", "id", "name", "role", "shortname"]
      },
      "StakeholderBasic": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "name": {
            "type": "string",
            "title": "Tam Adı",
            "maxLength": 400
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoleEnum"
              }
            ],
            "title": "Rolü"
          },
          "shortname": {
            "type": "string",
            "title": "Kısa/Takma Adı",
            "maxLength": 100
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "title": "Telefon",
            "maxLength": 20
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "title": "E-Posta",
            "maxLength": 100
          },
          "vkntckn": {
            "type": "string",
            "nullable": true,
            "title": "VKN/TCKN",
            "maxLength": 40
          },
          "address": {
            "type": "string",
            "nullable": true,
            "title": "Adres",
            "maxLength": 1000
          }
        },
        "required": ["id", "name", "role", "shortname"]
      },
      "StakeholderBasicRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Tam Adı",
            "maxLength": 400
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoleEnum"
              }
            ],
            "title": "Rolü"
          },
          "shortname": {
            "type": "string",
            "minLength": 1,
            "title": "Kısa/Takma Adı",
            "maxLength": 100
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "title": "Telefon",
            "maxLength": 20
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "title": "E-Posta",
            "maxLength": 100
          },
          "vkntckn": {
            "type": "string",
            "nullable": true,
            "title": "VKN/TCKN",
            "maxLength": 40
          },
          "address": {
            "type": "string",
            "nullable": true,
            "title": "Adres",
            "maxLength": 1000
          }
        },
        "required": ["name", "role", "shortname"]
      },
      "StakeholderEmployee": {
        "type": "object",
        "properties": {
          "stakeholder": {
            "type": "integer",
            "title": "Temsil ettiği kurum ya da kişi"
          },
          "position": {
            "type": "string",
            "nullable": true,
            "title": "Pozisyonu",
            "maxLength": 100
          },
          "name": {
            "type": "string",
            "title": "Adı",
            "maxLength": 100
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "title": "Telefon",
            "maxLength": 20
          },
          "email": {
            "type": "string",
            "nullable": true,
            "title": "E-Posta",
            "maxLength": 100
          }
        },
        "required": ["name", "stakeholder"]
      },
      "StakeholderEmployeeRequest": {
        "type": "object",
        "properties": {
          "stakeholder": {
            "type": "integer",
            "title": "Temsil ettiği kurum ya da kişi"
          },
          "position": {
            "type": "string",
            "nullable": true,
            "title": "Pozisyonu",
            "maxLength": 100
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Adı",
            "maxLength": 100
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "title": "Telefon",
            "maxLength": 20
          },
          "email": {
            "type": "string",
            "nullable": true,
            "title": "E-Posta",
            "maxLength": 100
          }
        },
        "required": ["name", "stakeholder"]
      },
      "StakeholderRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Tam Adı",
            "maxLength": 400
          },
          "role": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RoleEnum"
              }
            ],
            "title": "Rolü"
          },
          "shortname": {
            "type": "string",
            "minLength": 1,
            "title": "Kısa/Takma Adı",
            "maxLength": 100
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "title": "Telefon",
            "maxLength": 20
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "title": "E-Posta",
            "maxLength": 100
          },
          "vkntckn": {
            "type": "string",
            "nullable": true,
            "title": "VKN/TCKN",
            "maxLength": 40
          },
          "address": {
            "type": "string",
            "nullable": true,
            "title": "Adres",
            "maxLength": 1000
          }
        },
        "required": ["name", "role", "shortname"]
      },
      "StockMovementNested": {
        "type": "object",
        "description": "for creating WarehouseItemStock from StockMovement",
        "properties": {
          "warehouse_item_stock": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseItemStockNested"
              }
            ],
            "title": "Warehouse item stock"
          },
          "amount": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "title": "Amount"
          },
          "related_movement": {
            "type": "integer",
            "title": "Related movement",
            "nullable": true
          }
        },
        "required": ["amount", "warehouse_item_stock"]
      },
      "StockMovementNestedRequest": {
        "type": "object",
        "description": "for creating WarehouseItemStock from StockMovement",
        "properties": {
          "warehouse_item_stock": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseItemStockNestedRequest"
              }
            ],
            "title": "Warehouse item stock"
          },
          "amount": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "title": "Amount"
          },
          "related_movement": {
            "type": "integer",
            "title": "Related movement",
            "nullable": true
          }
        },
        "required": ["amount", "warehouse_item_stock"]
      },
      "StockMovementWithoutItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "warehouse_item_stock": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseItemStockInfo"
              }
            ],
            "title": "Warehouse item stock"
          },
          "amount": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "title": "Miktar"
          },
          "invoice_item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceItemWithDetailedInvoice"
              }
            ],
            "title": "Invoice item"
          }
        },
        "required": ["amount", "id", "invoice_item", "warehouse_item_stock"]
      },
      "StockMovementWithoutItemRequest": {
        "type": "object",
        "properties": {
          "warehouse_item_stock": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseItemStockInfoRequest"
              }
            ],
            "title": "Warehouse item stock"
          },
          "amount": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "title": "Miktar"
          },
          "invoice_item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceItemWithDetailedInvoiceRequest"
              }
            ],
            "title": "Invoice item"
          }
        },
        "required": ["amount", "invoice_item", "warehouse_item_stock"]
      },
      "StockUnit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "name": {
            "type": "string",
            "title": "Birim",
            "maxLength": 20
          }
        },
        "required": ["id", "name"]
      },
      "StockUnitNested": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "name": {
            "type": "string",
            "title": "Birim",
            "maxLength": 20
          }
        },
        "required": ["id", "name"]
      },
      "StockUnitNestedRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Birim",
            "maxLength": 20
          }
        },
        "required": ["name"]
      },
      "StockUnitRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Birim",
            "maxLength": 20
          }
        },
        "required": ["name"]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "username": {
            "type": "string",
            "title": "Kullanıcı adı",
            "description": "Zorunlu. 150 karakter ya da daha az olmalı. Sadece harfler, rakamlar ve @/./+/-/_ karakterleri kullanılabilir.",
            "pattern": "^[\\w.@+-]+$",
            "maxLength": 150
          },
          "first_name": {
            "type": "string",
            "title": "Adı",
            "maxLength": 150
          },
          "last_name": {
            "type": "string",
            "title": "Soyadı",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "E-posta adresi",
            "maxLength": 254
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "title": "Telefon",
            "maxLength": 15
          },
          "date_joined": {
            "type": "string",
            "format": "date-time",
            "title": "Katılma tarihi"
          },
          "last_login": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "title": "Son oturum açma"
          },
          "is_active": {
            "type": "boolean",
            "default": true,
            "title": "Etkin",
            "description": "Bu kullanıcının etkin olarak işlem görüp görmediğini belirler. Hesapları silmek yerine bunun işaretini kaldırın."
          },
          "is_staff": {
            "type": "boolean",
            "default": false,
            "title": "Görev durumu",
            "description": "Kullanıcının bu yönetici sitesine oturum açıp açamayacağını belirler."
          },
          "is_superuser": {
            "type": "boolean",
            "default": false,
            "title": "Süper kullanıcı durumu",
            "description": "Bu kullanıcıya ayrı ayrı izin atamadan tüm izinlerin verilip verilmeyeceğini belirler."
          },
          "avatar": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "title": "Kullanıcı Resmi"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Group"
            },
            "title": "Groups"
          }
        },
        "required": ["id", "username"]
      },
      "UserRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 1,
            "title": "Kullanıcı adı",
            "description": "Zorunlu. 150 karakter ya da daha az olmalı. Sadece harfler, rakamlar ve @/./+/-/_ karakterleri kullanılabilir.",
            "pattern": "^[\\w.@+-]+$",
            "maxLength": 150
          },
          "first_name": {
            "type": "string",
            "title": "Adı",
            "maxLength": 150
          },
          "last_name": {
            "type": "string",
            "title": "Soyadı",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "E-posta adresi",
            "maxLength": 254
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "title": "Telefon",
            "maxLength": 15
          },
          "date_joined": {
            "type": "string",
            "format": "date-time",
            "title": "Katılma tarihi"
          },
          "last_login": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "title": "Son oturum açma"
          },
          "is_active": {
            "type": "boolean",
            "default": true,
            "title": "Etkin",
            "description": "Bu kullanıcının etkin olarak işlem görüp görmediğini belirler. Hesapları silmek yerine bunun işaretini kaldırın."
          },
          "is_staff": {
            "type": "boolean",
            "default": false,
            "title": "Görev durumu",
            "description": "Kullanıcının bu yönetici sitesine oturum açıp açamayacağını belirler."
          },
          "is_superuser": {
            "type": "boolean",
            "default": false,
            "title": "Süper kullanıcı durumu",
            "description": "Bu kullanıcıya ayrı ayrı izin atamadan tüm izinlerin verilip verilmeyeceğini belirler."
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "nullable": true,
            "title": "Kullanıcı Resmi"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupRequest"
            },
            "title": "Groups"
          }
        },
        "required": ["username"]
      },
      "UserWithGroupDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "username": {
            "type": "string",
            "title": "Kullanıcı adı",
            "description": "Zorunlu. 150 karakter ya da daha az olmalı. Sadece harfler, rakamlar ve @/./+/-/_ karakterleri kullanılabilir.",
            "pattern": "^[\\w.@+-]+$",
            "maxLength": 150
          },
          "first_name": {
            "type": "string",
            "title": "Adı",
            "maxLength": 150
          },
          "last_name": {
            "type": "string",
            "title": "Soyadı",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "E-posta adresi",
            "maxLength": 254
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "title": "Telefon",
            "maxLength": 15
          },
          "date_joined": {
            "type": "string",
            "format": "date-time",
            "title": "Katılma tarihi"
          },
          "last_login": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "title": "Son oturum açma"
          },
          "is_active": {
            "type": "boolean",
            "default": true,
            "title": "Etkin",
            "description": "Bu kullanıcının etkin olarak işlem görüp görmediğini belirler. Hesapları silmek yerine bunun işaretini kaldırın."
          },
          "is_staff": {
            "type": "boolean",
            "default": false,
            "title": "Görev durumu",
            "description": "Kullanıcının bu yönetici sitesine oturum açıp açamayacağını belirler."
          },
          "is_superuser": {
            "type": "boolean",
            "default": false,
            "title": "Süper kullanıcı durumu",
            "description": "Bu kullanıcıya ayrı ayrı izin atamadan tüm izinlerin verilip verilmeyeceğini belirler."
          },
          "avatar": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "title": "Kullanıcı Resmi"
          },
          "groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupDetail"
            },
            "title": "Groups"
          }
        },
        "required": ["id", "username"]
      },
      "Warehouse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "name": {
            "type": "string",
            "title": "Depo adı",
            "maxLength": 100
          },
          "address": {
            "type": "string",
            "nullable": true,
            "title": "Adres",
            "maxLength": 200
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "title": "Telefon",
            "maxLength": 20
          },
          "plate_number": {
            "type": "string",
            "nullable": true,
            "title": "Plaka numarası",
            "maxLength": 20
          }
        },
        "required": ["id", "name"]
      },
      "WarehouseItemStock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true,
            "title": "ID"
          },
          "item": {
            "type": "integer",
            "title": "Ürün/Hizmet"
          },
          "warehouse": {
            "type": "integer",
            "title": "Depo adı",
            "nullable": true
          },
          "amount": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "readOnly": true,
            "title": "Amount"
          }
        },
        "required": ["amount", "id", "item", "warehouse"]
      },
      "WarehouseItemStockINFO_ONLY": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "required": ["id"]
      },
      "WarehouseItemStockINFO_ONLYRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "warehouse": {
            "type": "integer",
            "writeOnly": true,
            "title": "Warehouse"
          }
        },
        "required": ["id"]
      },
      "WarehouseItemStockInfo": {
        "type": "object",
        "properties": {
          "warehouse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Warehouse"
              }
            ],
            "title": "Warehouse"
          },
          "amount_db": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Miktar"
          }
        },
        "required": ["warehouse"]
      },
      "WarehouseItemStockInfoRequest": {
        "type": "object",
        "properties": {
          "warehouse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WarehouseRequest"
              }
            ],
            "title": "Warehouse"
          },
          "amount_db": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "nullable": true,
            "title": "Miktar"
          }
        },
        "required": ["warehouse"]
      },
      "WarehouseItemStockNested": {
        "type": "object",
        "description": "for creating Item if needed from stock WarehouseItemStock",
        "properties": {
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ItemNested"
              }
            ],
            "title": "Item"
          },
          "amount": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,15}(?:\\.\\d{0,4})?$",
            "readOnly": true,
            "title": "Amount"
          }
        },
        "required": ["amount", "item"]
      },
      "WarehouseItemStockNestedRequest": {
        "type": "object",
        "description": "for creating Item if needed from stock WarehouseItemStock",
        "properties": {
          "item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ItemNestedRequest"
              }
            ],
            "title": "Item"
          },
          "warehouse": {
            "type": "integer",
            "writeOnly": true,
            "title": "Warehouse"
          }
        },
        "required": ["item"]
      },
      "WarehouseItemStockRequest": {
        "type": "object",
        "properties": {
          "item": {
            "type": "integer",
            "title": "Ürün/Hizmet"
          },
          "warehouse": {
            "type": "integer",
            "title": "Depo adı",
            "nullable": true
          }
        },
        "required": ["item", "warehouse"]
      },
      "WarehouseRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Depo adı",
            "maxLength": 100
          },
          "address": {
            "type": "string",
            "nullable": true,
            "title": "Adres",
            "maxLength": 200
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "title": "Telefon",
            "maxLength": 20
          },
          "plate_number": {
            "type": "string",
            "nullable": true,
            "title": "Plaka numarası",
            "maxLength": 20
          }
        },
        "required": ["name"]
      }
    },
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "sessionid"
      },
      "knoxTokenAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
